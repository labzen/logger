<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration>

<configuration>
  <import class="ch.qos.logback.classic.encoder.PatternLayoutEncoder"/>
  <import class="ch.qos.logback.core.ConsoleAppender"/>

  <appender name="STDOUT" class="ConsoleAppender">
    <encoder class="PatternLayoutEncoder">
      <pattern>%d{HH:mm:ss.SSS} %yellow([%15.15thread]) %highlighter(%-5level) - %cyan(%-45.45logger) : %msg%newEx%n</pattern>
<!--      <pattern>[%thread] || %d{HH:mm:ss.SSS} == %ZLevel %logger{36} - %msg%n</pattern>-->
    </encoder>
  </appender>

  <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <!--定义日志输出的路径-->
    <!--这里的scheduler.manager.server.home 没有在上面的配置中设定，所以会使用java启动时配置的值-->
    <!--比如通过 java -Dscheduler.manager.server.home=/path/to XXXX 配置该属性-->
    <file>/Users/dean/Working/.logs/labzen/${app.name}.log</file>
    <!--定义日志滚动的策略-->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!--定义文件滚动时的文件名的格式-->
      <fileNamePattern>/Users/dean/Working/.logs/labzen/$logger.%d{yyyy-MM-dd.HH}.log.gz
      </fileNamePattern>
      <!--60天的时间周期，日志量最大20GB-->
      <maxHistory>60</maxHistory>
      <!-- 该属性在 1.1.6版本后 才开始支持-->
      <totalSizeCap>20GB</totalSizeCap>
    </rollingPolicy>
    <!--定义输出格式-->
    <encoder>
      <pattern>%d [%thread] %-5level %logger{36} [%file : %line] - %msg%n</pattern>
    </encoder>
  </appender>

  <root level="debug">
    <appender-ref ref="STDOUT"/>
    <appender-ref ref="file"/>
  </root>
</configuration>
